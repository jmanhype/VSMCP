apiVersion: apps/v1
kind: Deployment
metadata:
  name: vsmcp
  namespace: vsmcp
  labels:
    app.kubernetes.io/name: vsmcp
    app.kubernetes.io/component: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: vsmcp
      app.kubernetes.io/component: backend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: vsmcp
        app.kubernetes.io/component: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: vsmcp
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: vsmcp
        image: vsmcp:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 4000
          protocol: TCP
        - name: mcp
          containerPort: 5000
          protocol: TCP
        - name: epmd
          containerPort: 4369
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        env:
        - name: RELEASE_NODE
          value: "vsmcp@$(POD_IP)"
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        envFrom:
        - configMapRef:
            name: vsmcp-config
        - secretRef:
            name: vsmcp-secrets
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "2000m"
        livenessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - /opt/vsmcp/bin/vsmcp ping
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: data
          mountPath: /opt/vsmcp/data
        - name: scripts
          mountPath: /opt/vsmcp/scripts
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - /opt/vsmcp/bin/vsmcp stop
      initContainers:
      - name: wait-for-postgres
        image: busybox:1.36
        command: ['sh', '-c', 'until nc -z postgres 5432; do echo waiting for postgres; sleep 2; done;']
      - name: wait-for-rabbitmq
        image: busybox:1.36
        command: ['sh', '-c', 'until nc -z rabbitmq 5672; do echo waiting for rabbitmq; sleep 2; done;']
      - name: run-migrations
        image: vsmcp:latest
        command: ["/opt/vsmcp/bin/vsmcp", "eval", "Vsmcp.Release.migrate()"]
        envFrom:
        - configMapRef:
            name: vsmcp-config
        - secretRef:
            name: vsmcp-secrets
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: vsmcp-data
      - name: scripts
        configMap:
          name: vsmcp-scripts
          defaultMode: 0755